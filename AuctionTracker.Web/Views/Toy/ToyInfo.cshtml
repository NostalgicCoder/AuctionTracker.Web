@using AuctionTracker.Web.Class
@using AuctionTracker.Web.Interfaces

@model Product;

@{
    ViewData["Title"] = string.Format("{0} - Auction Sale Info:", Model.SelectedProduct);

    IGeneralHelper generalHelper = new GeneralHelper();

    var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject(Model.LineGraph.Select(x => x.SaleDate).ToList());
    var YValues = Newtonsoft.Json.JsonConvert.SerializeObject(Model.LineGraph.Select(x => x.Price).ToList());
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>

<script type="text/javascript">

    function updateFrmChkBx(e) {
        var info = document.getElementById(e);

        if (info.getAttribute("id") == "searchCardedBoxedChkBx") {
            document.getElementById('searchLooseChkBx').checked = false;
        }

        if (info.getAttribute("id") == "searchLooseChkBx") {
            document.getElementById('searchCardedBoxedChkBx').checked = false;
        }

        //alert(info.getAttribute("id"));
    }

    // JQuery Code:
    $(function () {
        var chartName = "chart";
        var ctx = document.getElementById(chartName).getContext('2d');
        var data = {
            labels: @Html.Raw(XLabels),
            datasets: [{
                label: "Price Trend (Inc Postage)",
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(255, 0, 0)',
                    'rgba(0, 255, 0)',
                    'rgba(0, 0, 255)',
                    'rgba(192, 192, 192)',
                    'rgba(255, 255, 0)',
                    'rgba(255, 0, 255)'
                ],
                borderColor: [
                    'rgba(255,99,132,1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)',
                    'rgba(255, 0, 0)',
                    'rgba(0, 255, 0)',
                    'rgba(0, 0, 255)',
                    'rgba(192, 192, 192)',
                    'rgba(255, 255, 0)',
                    'rgba(255, 0, 255)'
                ],
                borderWidth: 1,
                data: @Html.Raw(YValues)
                    }]
        };

        var options = {
            maintainAspectRatio: false,
            scales: {
                yAxes: [{
                    ticks: {
                        min: 0,
                        beginAtZero: true
                    },
                    gridLines: {
                        display: true,
                        color: "rgba(255,99,164,0.2)"
                    }
                }],
                xAxes: [{
                    ticks: {
                        min: 0,
                        beginAtZero: true
                    },
                    gridLines: {
                        display: false
                    }
                }]
            }
        };

        var myChart = new Chart(ctx, {
            options: options,
            data: data,
            type: 'line'

        });
    });

</script>

<br />

<h2>@Model.SelectedProductLine > @Model.SelectedProduct - Auction Sale Info:</h2>

<br />

<table class="siteTheme" style="width:40%">
    <tbody>
        <tr>
            <th class="siteTheme">
                Result Count:
            </th>
            <td class="siteTheme">
                @Model.Toy.Count().ToString()
            </td>
        </tr>
        <tr>
            <th class="siteTheme">
                Mean Price:
            </th>
            <td class="siteTheme">
                <b>£@Math.Round(Model.MeanPrice, 2) (£@Math.Round(Model.MeanPriceAndPostage, 2))</b>
            </td>
        </tr>
        <tr>
            <th class="siteTheme">
                Median Price:
            </th>
            <td class="siteTheme">
                £@Math.Round(Model.MedianPrice, 2) (£@Math.Round(Model.MedianPriceAndPostage, 2))
            </td>
        </tr>
        <tr>
            <th class="siteTheme">
                Range Price:
            </th>
            <td class="siteTheme">
                Min: £@Math.Round(Model.MinPrice, 2) (£@Math.Round(Model.MinPriceAndPostage, 2)) > Max: £@Math.Round(Model.MaxPrice, 2) (£@Math.Round(Model.MaxPriceAndPostage, 2))
            </td>
        </tr>
        @{
            if (Model.MaxPriceCurrentYear != 0.00M)
            {
                <tr>
                    <th class="siteTheme">
                        @DateTime.Now.Year Range Price:
                    </th>
                    <td class="siteTheme">
                        Min: £@Math.Round(Model.MinPriceCurrentYear, 2) (£@Math.Round(Model.MinPriceAndPostageCurrentYear, 2)) > Max: £@Math.Round(Model.MaxPriceCurrentYear, 2) (£@Math.Round(Model.MaxPriceAndPostageCurrentYear, 2)) &nbsp; <i class="bi bi-info-square" data-toggle="tooltip" data-placement="right" title="Shows the price range for the current year only"></i>
                    </td>
                </tr>
            }
        }
        <tr>
            <th class="siteTheme">
                Mean Postage:
            </th>
            <td class="siteTheme">
                <b>£@Math.Round(Model.MeanPostage, 2)</b>
            </td>
        </tr>
        <tr>
            <th class="siteTheme">
                Median Postage:
            </th>
            <td class="siteTheme">
                £@Model.MedianPostage
            </td>
        </tr>
        <tr>
            <th class="siteTheme">
                Range Postage:
            </th>
            <td class="siteTheme">
                Min: £@Model.MinPostage > Max: £@Model.MaxPostage
            </td>
        </tr>
        <tr>
            <th class="siteTheme">
                Price Trend:
            </th>
            <td class="siteTheme">
                @Model.Trend &nbsp; <i class="bi bi-info-square" data-toggle="tooltip" data-placement="right" title="Looks at the price of items that are in mint, high or medium condition and complete, it then identifies if the price is going up, down or staying the same. Compares the top three most recent sale results OR compares the top two OR will report not enough data."></i>
            </td>
        </tr>
    </tbody>
</table>

<br />

<div class="card border-primary mb-3" style="width: 100%">
    <div class="card-body">
        <canvas id="chart" style="height:280px"></canvas>
    </div>
</div>

<form method="post" asp-action="ToyInfoSortOrder">

    <label>Order By:</label>

    <select class="form-select" asp-for="SelectedSortOrder" asp-items="@Model.SortOrderListToy" style="width:200px">
        <option>Please select one</option>
    </select>

    <p></p>

    <div class="card border-primary mb-3" style="width: 100%">
        <div class="card-header">Show Only:</div>
        <div class="card-body">

            <div class="form-check">
                <input asp-for="SearchCondition" class="form-check-input" type="checkbox">
                <label class="form-check-label">
                    Mint/High Condition
                </label>
            </div>

            <div class="form-check">
                <input asp-for="SearchComplete" class="form-check-input" type="checkbox">
                <label class="form-check-label">
                    Complete
                </label>
            </div>

            <div class="form-check">
                <input asp-for="SearchCurrentYear" class="form-check-input" type="checkbox">
                <label class="form-check-label">
                    Current Year
                </label>
            </div>

            <div class="form-check">
                <input asp-for="SearchLoose" class="form-check-input" type="checkbox" id="searchLooseChkBx" onclick="updateFrmChkBx(id)">
                <label class="form-check-label">
                    Loose Toys
                </label>
            </div>

            <div class="form-check">
                <input asp-for="SearchCardedBoxed" class="form-check-input" type="checkbox" id="searchCardedBoxedChkBx" onclick="updateFrmChkBx(id)">
                <label class="form-check-label">
                    Carded / Boxed
                </label>
            </div>

        </div>
    </div>

    <button type="submit" class="btn btn-primary">Filter Results &nbsp; <i class="bi bi-filter"></i></button>

    <p></p>

    <input type="hidden" asp-for="@Model.SelectedProduct" />
    <input type="hidden" asp-for="@Model.SelectedProductLine" />

</form>

@{
    bool completeHidden = true;
    bool damagedAccessoryHidden = true;
    bool colourHidden = true;
    bool discolourHidden = true;
    bool cardedHidden = true;
    bool boxedHidden = true;
    bool standsHidden = true;

    switch (Model.SelectedProductLine.ToLower())
    {
        case "mimp":
            colourHidden = false;
            discolourHidden = false;
            break;
        case "motu":
            completeHidden = false;
            damagedAccessoryHidden = false;
            cardedHidden = false;
            boxedHidden = false;
            standsHidden = false;
            break;
        default:
            completeHidden = false;
            damagedAccessoryHidden = false;
            cardedHidden = false;
            boxedHidden = false;
            break;
    }
}

<table class="siteTheme" style="width:100%">
    <thead>
        <tr>
            <th class="siteTheme">
                Name:
            </th>
            <th class="siteTheme">
                Condition:
            </th>
            <th class="siteTheme" hidden="@completeHidden">
                Complete:
            </th>
            <th class="siteTheme" hidden="@colourHidden">
                Colour:
            </th>
            <th class="siteTheme" hidden="@discolourHidden">
                Discoloured:
            </th>
            <th class="siteTheme" hidden="@standsHidden">
                Stands:
            </th>
            <th class="siteTheme">
                Damaged:
            </th>
            <th class="siteTheme" hidden="@damagedAccessoryHidden">
                Damaged Accessory:
            </th>
            <th class="siteTheme" hidden="@cardedHidden">
                Carded:
            </th>
            <th class="siteTheme" hidden="@boxedHidden">
                Boxed:
            </th>
            <th class="siteTheme">
                Price:
            </th>
            <th class="siteTheme">
                Postage:
            </th>
            <th class="siteTheme">
                Sale Date:
            </th>
            <th class="siteTheme">
                Description:
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var obj in Model.Toy)
        {
            <tr>
                <td class="siteTheme" style="text-align: center">
                    @obj.Name
                </td>
                <td class="siteTheme" style="text-align: center">
                    @obj.Condition
                </td>
                <td class="siteTheme" style="text-align: center" hidden="@completeHidden">
                    @obj.Complete
                </td>
                <td class="siteTheme" style="text-align: center" hidden="@colourHidden">
                    @obj.Colour
                </td>
                <td class="siteTheme" style="text-align: center" hidden="@discolourHidden">
                    @obj.Discoloured
                </td>
                <td class="siteTheme" style="text-align: center" hidden="@standsHidden">
                    @obj.Stands
                </td>
                <td class="siteTheme" style="text-align: center">
                    @obj.Damaged
                </td>
                <td class="siteTheme" style="text-align: center" hidden="@damagedAccessoryHidden">
                    @obj.DamagedAccessory
                </td>
                <td class="siteTheme" style="text-align: center" hidden="@cardedHidden">
                    @obj.Carded
                </td>
                <td class="siteTheme" style="text-align: center" hidden="@boxedHidden">
                    @obj.Boxed
                </td>
                <td class="siteTheme" class="bgHighlight" style="text-align: center">
                    £@obj.Price
                </td>
                <td class="siteTheme" style="text-align: center">
                    £@obj.Postage
                </td>
                <td class="siteTheme" style="text-align: center">
                    @generalHelper.ConvertDateTime(obj.SaleDate)
                </td>
                <td class="siteTheme">
                    @obj.Description
                </td>
            </tr>
        }
    </tbody>
</table>

<br />

<form method="post" asp-action="Index">

    <button type="submit" class="btn btn-primary"><i class="bi bi-chevron-left"></i> Back to list</button>

    <input type="hidden" asp-for="@Model.SelectedProductLine" />

</form>