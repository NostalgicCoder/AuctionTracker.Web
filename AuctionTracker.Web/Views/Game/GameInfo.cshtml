@using AuctionTracker.Web.Class
@using AuctionTracker.Web.Interfaces;

@model Product

@{
    ViewData["Title"] = string.Format("{0} - Auction Sale Info:", Model.SelectedProduct);

    IGeneralHelper generalHelper = new GeneralHelper();

    var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject(Model.LineGraph.Select(x => x.SaleDate).ToList());
    var YValues = Newtonsoft.Json.JsonConvert.SerializeObject(Model.LineGraph.Select(x => x.Price).ToList());
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>

<script type="text/javascript">

    // On Page Load:
    $(document).ready(function() {
        // Get the array size for 'selectedRowChkBx' checkboxes and uncheck them all (Req due to dynamic nature of results varying in size)
        var value = $("input:checkbox[id=selectedRowChkBx]").length;

        for (i = 0; i < value; i++) {
            $('input:checkbox[id=selectedRowChkBx]')[i].checked = false;
        }
    });

    $(function() {
        var chartName = "chart";
        var ctx = document.getElementById(chartName).getContext('2d');
        var data = {
            labels: @Html.Raw(XLabels),
            datasets: [{
                label: "Price Trend (Inc Postage)",
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(255, 0, 0)',
                    'rgba(0, 255, 0)',
                    'rgba(0, 0, 255)',
                    'rgba(192, 192, 192)',
                    'rgba(255, 255, 0)',
                    'rgba(255, 0, 255)'
                ],
                borderColor: [
                    'rgba(255,99,132,1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)',
                    'rgba(255, 0, 0)',
                    'rgba(0, 255, 0)',
                    'rgba(0, 0, 255)',
                    'rgba(192, 192, 192)',
                    'rgba(255, 255, 0)',
                    'rgba(255, 0, 255)'
                ],
                borderWidth: 1,
                data: @Html.Raw(YValues)
                    }]
        };

        var options = {
            maintainAspectRatio: false,
            scales: {
                yAxes: [{
                    ticks: {
                        min: 0,
                        beginAtZero: true
                    },
                    gridLines: {
                        display: true,
                        color: "rgba(255,99,164,0.2)"
                    }
                }],
                xAxes: [{
                    ticks: {
                        min: 0,
                        beginAtZero: true
                    },
                    gridLines: {
                        display: false
                    }
                }]
            }
        };

        var myChart = new Chart(ctx, {
            options: options,
            data: data,
            type: 'line'

        });
    });

</script>

<div>
    <h2>@Model.SelectedProduct - Auction Sale Info:</h2>

    <br />

    @{
        if (Model.FullGameData.Game != null)
        {
            <table>
                <tr>
                    <td width="20%">
                        <img src="@Model.FullGameData.LargeCoverUrl" width="264" height="374" border="1" />
                    </td>
                    <td width="80%">
                        <div class="igdbInfoContainer">

                            @{
                                if (Model.FullGameData.Platforms != null)
                                {
                                    <li>@String.Join(", ", Model.FullGameData.Platforms.Select(x => x.name).ToArray())</li>
                                }

                                if (Model.FullGameData.Genres != null)
                                {
                                    <p></p>

                                    <li>@String.Join(", ", Model.FullGameData.Genres.Select(x => x.name).ToArray())</li>
                                }
                            }

                            <p></p>

                            @Model.FullGameData.GameDetails[0].summary

                            <p></p>

                            @Model.FullGameData.GameDetails[0].storyline
                        </div>
                    </td>
                </tr>
            </table>

            <br />
        }
    }

    <table class="siteTheme" style="width:40%">
        <tbody>
            <tr>
                <th class="siteTheme">
                    Result Count:
                </th>
                <td class="siteTheme">
                    @Model.Game.Count().ToString()
                </td>
            </tr>
            <tr>
                <th class="siteTheme">
                    Mean Price:
                </th>
                <td class="siteTheme">
                    <b>£@Math.Round(Model.MeanPrice, 2) (£@Math.Round(Model.MeanPriceAndPostage, 2))</b>
                </td>
            </tr>
            <tr>
                <th class="siteTheme">
                    Median Price:
                </th>
                <td class="siteTheme">
                    £@Math.Round(Model.MedianPrice, 2) (£@Math.Round(Model.MedianPriceAndPostage, 2))
                </td>
            </tr>
            <tr>
                <th class="siteTheme">
                    Range Price:
                </th>
                <td class="siteTheme">
                    Min: £@Math.Round(Model.MinPrice, 2) (£@Math.Round(Model.MinPriceAndPostage, 2)) > Max: £@Math.Round(Model.MaxPrice, 2) (£@Math.Round(Model.MaxPriceAndPostage, 2))
                </td>
            </tr>
            @{
                if (Model.MaxPriceCurrentYear != 0.00M)
                {
                    <tr>
                        <th class="siteTheme">
                            @DateTime.Now.Year Range Price:
                        </th>
                        <td class="siteTheme">
                            Min: £@Math.Round(Model.MinPriceCurrentYear, 2) (£@Math.Round(Model.MinPriceAndPostageCurrentYear, 2)) > Max: £@Math.Round(Model.MaxPriceCurrentYear, 2) (£@Math.Round(Model.MaxPriceAndPostageCurrentYear, 2)) &nbsp; <i class="bi bi-info-square" data-toggle="tooltip" data-placement="right" title="Shows the price range for the current year only"></i>
                        </td>
                    </tr>
                }
            }
            <tr>
                <th class="siteTheme">
                    Mean Postage:
                </th>
                <td class="siteTheme">
                    <b>£@Math.Round(Model.MeanPostage, 2)</b>
                </td>
            </tr>
            <tr>
                <th class="siteTheme">
                    Median Postage:
                </th>
                <td class="siteTheme">
                    £@Model.MedianPostage
                </td>
            </tr>
            <tr>
                <th class="siteTheme">
                    Range Postage:
                </th>
                <td class="siteTheme">
                    Min: £@Model.MinPostage > Max: £@Model.MaxPostage
                </td>
            </tr>
            <tr>
                <th class="siteTheme">
                    Price Trend:
                </th>
                <td class="siteTheme">
                    @Model.Trend &nbsp; <i class="bi bi-info-square" data-toggle="tooltip" data-placement="right" title="Looks at the price of items that are in mint, high or medium condition and complete, it then identifies if the price is going up, down or staying the same. Compares the top three most recent sale results OR compares the top two OR will report not enough data."></i>
                </td>
            </tr>
        </tbody>
    </table>

    <br />

    <div class="card border-primary mb-3" style="width: 100%">
        <div class="card-body">
            <canvas id="chart" style="height:280px"></canvas>
        </div>
    </div>

    <form method="post" asp-action="GameSortOrder">

        <label>Order By:</label>

        <select class="form-select" asp-for="SelectedSortOrder" asp-items="@Model.SortOrderListGame" style="width:200px">
            <option>Please select one</option>
        </select>

        <p></p>

        <div class="card border-primary mb-3" style="width: 100%">
            <div class="card-header">Show Only:</div>
            <div class="card-body">

                <div class="form-check">
                    <input asp-for="SearchCondition" class="form-check-input" type="checkbox">
                    <label class="form-check-label">
                        Mint/High Condition
                    </label>
                </div>

                <div class="form-check">
                    <input asp-for="SearchComplete" class="form-check-input" type="checkbox">
                    <label class="form-check-label">
                        Complete
                    </label>
                </div>

                <div class="form-check">
                    <input asp-for="SearchCurrentYear" class="form-check-input" type="checkbox">
                    <label class="form-check-label">
                        Current Year
                    </label>
                </div>

            </div>
        </div>

        <button type="submit" class="btn btn-primary">Filter Results &nbsp; <i class="bi bi-filter"></i></button>

        <p></p>

        <table class="siteTheme" style="width:100%">
            <thead>
                <tr>
                    <th class="siteTheme">
                        <i class="bi bi-info-square" data-toggle="tooltip" data-placement="right" title="Check to exclude the row item from filtered results."></i>
                    </th>
                    <th class="siteTheme">
                        Name:
                    </th>
                    <th class="siteTheme">
                        Variant:
                    </th>
                    <th class="siteTheme">
                        Condition:
                    </th>
                    <th class="siteTheme">
                        Sealed:
                    </th>
                    <th class="siteTheme">
                        Platform:
                    </th>
                    <th class="siteTheme">
                        Media Type:
                    </th>
                    <th class="siteTheme">
                        Complete:
                    </th>
                    <th class="siteTheme">
                        Price:
                    </th>
                    <th class="siteTheme">
                        Postage:
                    </th>
                    <th class="siteTheme">
                        Sale Date:
                    </th>
                    <th class="siteTheme">
                        Description:
                    </th>
                </tr>
            </thead>
            <tbody>
                @for (var val = 0; val < Model.Game.Count(); val++)
                {
                    <tr>
                        <td class="siteTheme" style="text-align: center">
                            <input id="selectedRowChkBx" asp-for="SelectedRow[val].IsSelected" class="form-check-input" type="checkbox">
                            <input type="hidden" asp-for="SelectedRow[val].Id" value="@Model.Game.ToArray()[val].Id" />
                        </td>
                        <td class="siteTheme" style="text-align: center">
                            @Model.Game.ToArray()[val].Name
                        </td>
                        <td class="siteTheme" style="text-align: center">
                            @Model.Game.ToArray()[val].Variant
                        </td>
                        <td class="siteTheme" style="text-align: center">
                            @Model.Game.ToArray()[val].Condition
                        </td>
                        <td class="siteTheme" style="text-align: center">
                            @Model.Game.ToArray()[val].Sealed
                        </td>
                        <td class="siteTheme" style="text-align: center">
                            @Model.Game.ToArray()[val].Platform
                        </td>
                        <td class="siteTheme" style="text-align: center">
                            @Model.Game.ToArray()[val].MediaType
                        </td>
                        <td class="siteTheme" style="text-align: center">
                            @Model.Game.ToArray()[val].Complete
                        </td>
                        <td class="siteTheme" class="bgHighlight" style="text-align: center">
                            £@Model.Game.ToArray()[val].Price
                        </td>
                        <td class="siteTheme" style="text-align: center">
                            £@Model.Game.ToArray()[val].Postage
                        </td>
                        <td class="siteTheme" style="text-align: center">
                            @generalHelper.ConvertDateTime(@Model.Game.ToArray()[val].SaleDate)
                        </td>
                        <td class="siteTheme">
                            @Model.Game.ToArray()[val].Description
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <input type="hidden" asp-for="@Model.SelectedProduct" />
        <input type="hidden" asp-for="@Model.SelectedGamePlatform" />

    </form>

    <br />

    <a asp-controller="Game" asp-action="Index" class="btn btn-primary siteButton">
        <i class="bi bi-chevron-left"></i> Back to list
    </a>

</div>